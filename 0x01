1.python的一些信息
  *Python是一种高级语言，是一种面向对象的、解释型的语言，由Guido van Rossum发明，遵循GPL（General Public Licence）协议，是源代码开放的软件。
  *Python是免费的、自由的。跨平台的。可以借助各种扩展模块轻松处理各种复杂功能。
  *Python的语句块由缩进来决定。
  *此外Python还同时支持面向对象和面向过程的编程：Python的可扩展性也非常强，可以用C/C++编写扩展程序，也可以嵌入CC++编写的程序之中，此外，
    Python语言也经常被称为“胶水语言”
  *高级语言的执行方式只有两种，即编译和解释，而Python源程序是解释执行
 2.Python编辑器的使用
 3.小结：关于Python的一些信息，以及使用。
    一个小程序：生成验证码的代码
     import string,random                                   #引入相关标准库
     capta =''
     words=''.join((string.ascii_letters,string.digits))    #生成大小写字母和谁穿
     for i in range(6):
          capta+=random.choice(words)                       #随机选择一个字母或数字
      print(capta)                                          #打印生成的验证码字符串
 4.Python语法基础
    4.1缩进分层
      一般使用4个空格进行缩进，不建议使用Tab缩进，如果缩进不恰当，会导致无法执行
    4.2代码注释
      单行注释，以“#”开头，同一行中其后的所有内容都视为注释
      多行注释，用三个单引号“'''”或者三个双引号“"""”将注释的内容包围起来
     4.3断行
      Python是不需要分号来分隔语句的，直接将一条语句写在一行之内。但是Python中其实也可以将两条语句书写在一行之内而中间用分号隔开的。
      还有一种情况就是：如果缩进语句块中只有提条语句，也可以直接写在“：”之后的，
          譬如：
              print("+");print(":-")
              if a>0:prnt("+")
              else:print("_")
       当然，还有一种情况就是，如果Python代码中一条语句过长或为了结构侵袭而不能或不方便写入同一行内，这时可以使用“\”将改行以后的内容写入下一行，而“\”之后不允许有任何内容，当然圆括号内内容是可以换行的
      4.4Python输入输出
         *接收键盘输入，Python程序如果需要输入，就必须使用input（）函数，基本形式如下：
         input（[prompt]）
         其中参数是可选的，既可以使用，也可以不使用，参数是用来提示用户输入的提示信息字符串，当用户输入程序所需要的数据时,以字符串的总是返回
         注：用户输入的数据全部以字符串形式返回，如果需要输入数值，则必须进行类型转换
         *显示处理结果，使用print()函数，基本形式如下：
         print(value,...,sep='',end='\n')
         其中value是  用户要输出的信息，后面的省略号表示可以有多个输出信息
         sep是多个要输出信息的分隔符，其默认是一个空格
         end是一个print()函数中所有要输出的信息之后添加的符号，默认值为换行符。
                  实例演示：
                        print('a','b','c')
                        print('a','b','c',sep=',')
                        print('a','b','c',end=';')
                        print('a','b','c')     
                   运行结果
                        >>>
                        a b c
                        a,b,c
                        a b c;a b c
                        >>>
          4.5使用Python计算
             由于Python是解释方式执行的高级程序设计语言，在交互式命令环境下可以输入算式进行计算，Python会立即计算出结果，并在交互环境下显示
             Python标准库中还内置了一个math模块，其中提供了丰富的数学函数，常用的函数如下
             sin(x)
             cos(x)
             asin(x)                    求x的反正弦函数
             acos(x)                     求x的反余弦函数
             tan(x)
             atan(x)                     求x反正切函数
             hypot(X,Y)                  求三角形的斜边长度
             fmod(x,y)                   求x/y的余数
             ceil（x）                  取不小于x的最小整数
             floor（x）                 取不大于x的最大整数
             fabs（x）                  求绝对值
             exp(x)                     求e的x次幂
             pow(x,y)                    求x的y次幂
             log10(x)                    求x的10底对数
             sqrt(x)                      求x的平方更
             pi                          圆周率的值
            由于math不是Python的内建函数，所以应用前需要通过import  math导入
            使用函数的一个例子
                  >>>import math
                  >>>x=2
                  >>>math.pow(x,3)
             令人惊奇的是使用交互式命令计算199的99次方居然算出来了
             这是由于Python直接提供了对于大整数的支持
             注意：任何编程语言对于浮点数的处理都不是很好，比如比较9个0.1相加和0.9的大小按理说，应该是ture，实际上输出的是FALSE，
             在这里有必要提及的一点事，可以使用两个浮点数相减，看他们是不是小于一个极小的数
          小结：关于Python的输入和输出
         
         
